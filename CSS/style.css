/* The :root selector is used to select all the elements of an HTML Documents. This selector covers all the HTML elements or tags.*/
:root {
    --red: #ff3838;
}

* {
    font-family: 'Nunito', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    outline: none;
    border: none;
    text-decoration: none;
    text-transform: capitalize;
    /*Transition is a shorthand property for: transition-property | transition-duration | transition-timing-function | transition-delay*/
    transition: all .2s linear;
}

/*means while selection anything these things should happer*/
*::selection {
    background: var(--red);
    color: #fff;

}

html {
    font-size: 62.5%;
    /*The CSS overflow property controls what happens to content that is too big to fit into an area.*/
    /*overflow-x specifies what to do with the left/right edges of the content.*/
    /*overflow-y specifies what to do with the top/bottom edges of the content. overflow-x: hidden;*/
    overflow-x: hidden;
    /*Add a smooth scrolling effect to the document:*/
    scroll-behavior: smooth;
    /*ye nhi smjh aaya*/
    scroll-padding-top: 6rem;
}

body {
    background: #f7f7f7;
}

header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #fff;
    padding: 2rem 9%;
    /*bos shadow: vertical horizontal blurr-effect*/
    /*An RGBA color value is specified with: rgba(red, green, blue, alpha). The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).*/
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);

}

header .logo {
    font-size: 2.5rem;
    font-weight: bolder;
    color: #666;

}

header .logo i {
    padding-right: .8rem;
    color: var(--red);
}

header .navbar a {
    font-size: 2rem;
    margin-left: 2rem;
    color: #666;
}

header .navbar a:hover {
    color: var(--red);

}

#menu-bar {
    font-size: 3rem;
    cursor: pointer;
    color: #666;
    border: .1rem solid #666;
    border-radius: .3rem;
    padding: .5rem 1.5rem;
    /*we'll use it while making it responsive*/
    display: none;
}

.home {
    display: flex;
    /*Make the flexible items wrap if necessary:*/
    flex-wrap: wrap;
    /*Set the gap between rows and columns to 50px:*/
    gap: 1.5rem;
    /*The min-height property defines the minimum height of an element.*/
    min-height: 100vh;
    align-items: center;
    background: url(../IMAGES/home-bg.jpg) no-repeat;
    background-size: cover;
    background-position: center;

}

.home .content {
    /*The flex-grow property specifies how much the item will grow relative to the rest of the flexible items inside the same container.*/
    /*The flex-shrink property specifies how the item will shrink relative to the rest of the flexible items inside the same container.*/
    /*The flex-basis property specifies the initial length of a flexible item.*/
    /*The flex property is a shorthand for the flexGrow, flexShrink, and the flexBasis properties.*/
    flex: 1 1 40rem;
    padding-top: 6.5rem;
}

.home .image {
    flex: 1 1 40rem;
}

.home .image img {
    width: 100%;
    padding: 1rem;

    /*The example below uses six of the animation properties:*/
    /*animation: animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction 
    animation: ;*/
    animation: float 3s linear infinite;
}

@keyframes float {

    0%,
    100% {
        transform: translateY(0rem);
    }

    50% {
        transform: translateY(3rem);
    }
}

.home .content h3 {
    font-size: 5rem;
    color: #333;
}

.home .content p {
    font-size: 1.7rem;
    color: #666;
    padding: 1rem 0;
}

section {
    padding: 2rem 9%;
}

.btn {
    display: inline-block;
    padding: .8rem 3rem;
    border: .2rem solid var(--red);
    color: var(--red);
    cursor: pointer;
    font-size: 1.7rem;
    border-radius: .5rem;
    /*position aur overflow ka use kyun kiya*/
    /*Smjhj aaaya vo actually before krnge tabb use absoloute krdenge helps to design*/
    position: relative;
    overflow: hidden;
    z-index: 0;
    margin-top: 1rem;


}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 0%;
    height: 100%;
    /*before me width zero hai to red bg nhi aayega but jab hover krnge tab width .3s me 100% ho jaayegi*/
    background: var(--red);
    /*transition: transition duration transition timing function*/
    transition: .3s linear;
    z-index: -1;

}

.btn:hover::before {
    width: 100%;
    left: 0;

}

.btn:hover {
    color: #fff;
}

.heading {
    text-align: center;
    font-size: 3.5rem;
    padding: 1rem;
    color: #666;
}

.heading span {
    color: var(--red);
}

.speciality .box-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
}

.speciality .box-container .box {
    flex: 1 1 30rem;
    position: relative;
    overflow: hidden;
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);
    border: .1rem solid rgba(0, 0, 0, .3);
    cursor: pointer;
    border-radius: .5rem;
}

.speciality .box-container .box .image {
    height: 100%;
    width: 100%;
    /*The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container.*/
    /*If we use object-fit: cover; the image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit:*/
    object-fit: cover;
    position: absolute;
    top: -100%;
    left: 0;
}

.speciality .box-container .box .content {
    text-align: center;
    padding: 2rem;
    background: #fff;
}

.speciality .box-container .box .content img {
    margin: 1.5rem 0;
}

.speciality .box-container .box .content h3 {
    font-size: 2.5rem;
    color: #333;
}

.speciality .box-container .box .content p {
    font-size: 1.5rem;
    color: #666;
    padding: 1.5rem 0;
}

/*galti ki yhan pe image hover nhi box hover ho rha hai*/
.speciality .box-container .box:hover .image {
    top: 0;
}

.speciality .box-container .box:hover .content {
    /*The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.*/
    transform: translateY(100%);
}
.popular .box-container{
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;

}
.popular .box-container .box{
  padding: 2rem;  
  background: #fff;
  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);
  border: .1rem solid rgba(0, 0, 0, .3);
  border-radius: .5rem;
  text-align: center;
  flex: 1 1 30rem;
  position: relative;

}
.popular .box-container .box img{
    height: 25rem;
    object-fit: cover;
    width: 100%;
}
.popular .box-container .box .price{
  position: absolute;
  top: 3rem;
  left: 3rem;
  background-color: var(--red);
  color: #fff;
  font-size: 2rem;
  padding: .5rem 1rem;
  border-radius: .5rem;
}
.popular .box-container .box h3{
    color: #333;
    font-size: 2.5rem;
    padding: 1rem;
}
.popular .box-container .box i{
    color: gold;
    font-size: 2.5rem;
    padding: 1rem .1rem;
}
.steps {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
}

.steps .box{
    flex: 1 1 25rem;
    padding: 1rem;
    text-align: center;
}
.steps .box img{
    border-radius: 50%;
    border: 1rem solid #fff;
    box-shadow: 0rem .5rem 1rem rgba(0, 0, 0, .3);
}
.steps .box h3{
    font-size: 3rem;
    color: #333;
    padding: 1.5rem 0;
}
.gallery .box-container{
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;

}
.gallery .box-container .box{
    flex: 1 1 30rem ;
    position: relative;
    height: 25rem;
    border: 1rem solid #fff;
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);
    border-radius: .5rem;
    overflow: hidden;
}
.gallery .box-container .box img{
    height: 100%;
    width: 100%;
    object-fit: cover;

}
.gallery .box-container .box .content{
    position: absolute;
    top: -100%;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(255,255,255,.8);
    padding: 2rem;
    padding-top: 5rem;
    text-align: center;
}
.gallery .box-container .box .content h3{
    font-size: 2.5rem;
    color: #333;
}
.gallery .box-container .box .content p{
    font-size: 1.7rem;
    color: #666;
    padding: 1rem 0;
}
.gallery .box-container .box:hover .content{
    top: 0;
}
.review .box-container{
    display: flex;
    flex-wrap: wrap;
    gap:1.5rem;
  }
  
  .review .box-container .box{
    text-align: center;
    padding:2rem;
    border:1rem solid #fff;
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.3);
    border-radius: .5rem;
    flex:1 1 30rem;
    background:#333;
    margin-top: 6rem;
  }
  
  .review .box-container .box img{
    height: 12rem;
    width:12rem;
    border-radius: 50%;
    border:1rem solid #fff;
    margin-top: -8rem;
    object-fit: cover;
  }
  
  .review .box-container .box h3{
    font-size: 2.5rem;
    color:#fff;
    padding:.5rem 0;
  }
  
  .review .box-container .box .stars i{
    font-size: 2rem;
    color:var(--red);
    padding:.5rem 0;
  }
  
  .review .box-container .box p{
    font-size: 1.5rem;
    color:#eee;
    padding:1rem 0;
  }
  
  .order .row{
     padding: 2rem;
     box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1);
     background: #fff;
     display: flex;
     flex-wrap: wrap;
     gap: 1.5rem;
     border-radius: .5rem;
  }
  .order .row .image{
    flex: 1 1 30rem;
    
  } 
  .order .row form{
    flex: 1 1 50rem;
    padding: 1rem;

  } 
  .order .row .image img{
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: .5rem;
  } 
  .order .row form .inputBox{
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
  }
  .order .row form .inputBox input, .order .row form textarea{
    padding: 1rem;
    margin: 1rem;
    font-size: 1.7rem;
    color: #333;
    text-transform: none;
    border: .1rem solid rgba(0, 0, 0, .3);
    border-radius: .5rem;
    width: 46%;

  } 
  .order .row form textarea{
    width: 100%;  
    /*The resize property defines if (and how) an element is resizable by the user*/
    resize: none;
    height: 15rem;
  }
  .order .row form .btn{
    background: none;
  }
  .order .row form .btn:hover{
    background: var(--red);
  }
  .footer{
    background: #000;
    text-align: center;

  }
  .footer .share{
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .footer .credit{
    padding: 2.5rem 1rem;
    color: #fff;
    font-weight: normal;
    font-size: 2rem;
  }
  .footer .credit span{
    color: var(--red);
  }
  .loader-container{
    position: fixed;
    top:0; left:0;
    z-index: 10000;
    background:#fff;
    display: flex;
    align-items: center;
    justify-content: center;
    height:100%;
    width:100%;
  }
  
  .loader-container.fade-out{
    top:-120%;
  }









/*MEDIA QUERIES*/
@media(max-width:994px) {
    html {
        font-size: 55%;
    }

    header {
        padding: 2rem 0px;
    }

    section {
        padding: 2rem;
    }
}

@media(max-width:768px) {
    #menu-bar {
        display: initial;
    }

    header .navbar {
        /* An element with position: absolute will be positioned with respect to its parent. The positioning of this element does not depend upon its siblings or the elements which are at the same level*/
        position: absolute;
        top: 100%;
        right: 0;
        left: 0;
        background: #f7f7f7;
        border-top: .1rem solid rgba(0, 0, 0, .1);
        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);


    }

    header .navbar.active {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }

    header .navbar a {
        margin: 1.5rem;
        padding: 1.5rem;
        display: block;
        border: .2rem solid rgba(0, 0, 0, .1);
        border-left: .5rem solid var(--red);
        background: #fff;
    }
}
@media(max-width:690px) {

    .order .row form .inputBox input{
        width: 100%;
    }
}
@media(max-width:400px) {
    html {
        font-size: 50%;
    }
}